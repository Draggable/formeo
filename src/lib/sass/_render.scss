@use "base/mixins";

@use 'base/colors' as color;
@use 'base/variables' as var;


.formeo-row,
.formeo-column,
.formeo-field {
  position: relative;
}

.f-input-group-wrap {
  > fieldset {
    position: relative;
    .remove-input-group {
      top: 8px;
    }
  }
}

.will-remove {
  background-color: color.$remove-bg;
  box-shadow: 0 0 1px 0 color.$brand-error inset;
}

.formeo-row {
  margin-bottom: 1em;
  flex-direction: row;
  justify-content: flex-start;
  flex-wrap: nowrap;
  align-content: stretch;
  align-items: stretch;
  display: flex;
  border-radius: var.$border-radius;
  transition: background-color 200ms, padding 200ms;
  padding: mixins.space() 0;

  &.will-remove {
    padding: mixins.space();
  }

  &:last-of-type {
    margin-bottom: 0;
  }
}

.formeo-row-wrap {
  margin-bottom: 1em;
  &:last-child {
    margin-bottom: 0;
  }
}

.f-input-group-wrap {
  @include mixins.clearfix;
  .formeo-row:first-of-type {
    .remove-input-group {
      display: none;
    }
  }
}

.f-input-group {
  position: relative;

  &:first-child {
    .remove-input-group {
      display: none;
    }
  }
}

.add-input-group {
  float: right;
  margin-top: 10px;
}

.remove-input-group {
  position: absolute;
  right: 0;
  top: 0;
  width: mixins.space(2);
  height: mixins.space(2);
  border: 0 none;
  background: transparent;
  outline: 0 none;
  line-height: 0;
  padding: mixins.space();

  &:hover {
    .svg-icon {
      fill: color.$brand-error;
    }
  }

  .svg-icon {
    pointer-events: none;
  }
}

.form-check-input:only-child {
  position: absolute;
}

.svg-icon {
  max-width: 100%;
  max-height: 100%;
}

.formeo-column {
  padding: 0 mixins.space();
  float: left;
  max-width: none;
  flex-direction: column;
  &:first-of-type {
    padding-left: 0;
  }
  &:last-of-type {
    padding-right: 0;
  }
}
