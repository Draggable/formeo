@use "sass:color" as sass-color;
@use "../base/mixins";

@use "../base/colors" as color;
@use "../base/variables" as var;

.formeo-column {
  transition: background-color 125ms ease-in-out, box-shadow 125ms, width 250ms;
  position: relative;
  background-color: color.$white;
  max-width: none;
  flex-direction: column;
  will-change: width;
  max-width: 100%;

  &[class*="col-"] {
    padding: 0;
  }


  &:first-of-type {
    border-top-right-radius: var.$border-radius;
  }

  &:last-of-type {
    border-bottom-right-radius: var.$border-radius;
    border-bottom-left-radius: var.$border-radius;

    .resize-x-handle {
      display: none !important;
    }
  }

  .resize-x-handle {
    display: none;
    position: absolute;
    right: -space(1);
    top: 0;
    bottom: 0;
    width: mixins.space(2);
    z-index: 2;
    cursor: ew-resize;

    &::before {
      width: 0;
      right: 6px;
      border: 1px dashed sass-color.adjust(color.$column-outline-color, $lightness: 15%);
      border-width: 0 2px;
      display: block;
      top: 0;
      position: absolute;
      height: 100%;
      content: "";
    }

    svg {
      fill: sass-color.adjust(color.$column-outline-color, $lightness: 15%);
      position: absolute;
      right: 1px;
      width: 14px;

      &.f-i-triangle-down {
        top: -14px;
      }

      &.f-i-triangle-up {
        bottom: -14px;
      }
    }
    &:hover {
      &::before {
        border-color: color.$column-outline-color;
      }
      svg {
        fill: color.$column-outline-color;
      }
    }
  }

  &::before {
    @include mixins.element-tag;

    transition-property: height;
    transition-duration: 150ms;
    padding: 0 10px;
    left: 50%;
    top: 1px;
    transform: translate(-50%, -100%);
    width: auto;
    height: 0;
    border-top-left-radius: var.$border-radius;
    border-top-right-radius: var.$border-radius;
  }

  &.hovering-column {
    &:first-child {
      border-top-left-radius: 0;
    }

    .formeo-field {
      opacity: 0.5;
    }

    &::after {
      opacity: 0;
    }
  }

  &.editing-column,
  &.hovering-column {
    box-shadow: 0 0 0 1px color.$column-outline-color inset;

    &::before {
      height: 23px;
      border-right: 1px solid color.$column-outline-color;
      border-left: 1px solid color.$column-outline-color;
      border-top: 1px solid color.$column-outline-color;
    }
  }

  &.column-moving {
    box-shadow: 0 0 0 1px color.$column-outline-color inset,
      0 0 30px 0 color.$gray-light;
  }

  &.editing-column {
    overflow: hidden;

    .column-edit {
      display: block;
    }
  }

  @include mixins.no-list-style;
}

.editing-row {
  .formeo-column,
  .empty {
    border-radius: var.$border-radius;
    height: 60px;
    background-color: color.$gray-lightest;

    &.empty {
      min-height: 0;
    }

    .formeo-field {
      display: none;
    }

    .resize-x-handle {
      display: block;
    }

    &::after {
      color: color.$gray-dark !important;
      line-height: 1em;
      opacity: 1;
      font-size: 1.1em;
      content: attr(data-col-width) !important;
      display: block;
      width: 100%;
      text-align: center;
      position: absolute;
      left: 50%;
      margin-top: 0;
      top: 50%;
      transform: translate(-50%, -50%);
    }
  }
}

.editing-field-preview {
  .column-actions {
    display: none;
  }
}
