/*
  Mixins
*/

@mixin breakpoint($point) {
  @if $point == phone-sm {
    // smartphones, portrait iPhone, small portrait Android
    @media (max-width: 320px) {
      @content;
    }
  } @else if $point == phone-lrg {
    // smartphones, Android phones, landscape iPhone
    @media (max-width: 481px) {
      @content;
    }
  } @else if $point == tablet-sm {
    // portrait tablets, portrait iPad, e-readers (Nook/Kindle), smaller landscape Android
    @media (max-width: 641px) {
      @content;
    }
  } @else if $point == tablet-md {
    // tablet, landscape iPad, lo-res laptops ands desktops
    @media (max-width: 961px) {
      @content;
    }
  } @else if $point == tablet-lrg {
    // big landscape tablets, laptops, and desktops
    @media (max-width: 1025px) {
      @content;
    }
  } @else if $point == tablet-lrg {
    // hi-res laptops and desktops
    @media (max-width: 1281px) {
      @content;
    }
  } @else {
    @media (max-width: $point) {
      @content;
    }
  }
}

@function space($space: 0.5) {
  @return $space * $base-space;
}

@mixin custom-scroll($trackColor, $thumbColor) {
  // Let's get this party started
  &::-webkit-scrollbar {
    width: $base-space;
    height: $base-space;
  }

  // Track
  &::-webkit-scrollbar-track {
    background-color: $trackColor;
  }

  // Handle
  &::-webkit-scrollbar-thumb {
    background: $thumbColor;
  }

  &::-webkit-scrollbar-thumb:window-inactive {
    background: $thumbColor;
  }

  overflow: auto;
}

%display-row {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  flex-wrap: nowrap;
  align-content: stretch;
  align-items: stretch;
}

%input-style {
  font-size: 100%;
  font-family: inherit;
  height: 2.1em;
  line-height: 1.5;
  margin: 0;
  border: $input-border;
  border-radius: $input-border-radius;
  background-color: $white;
  width: 100%;
  padding: $input-padding;
  box-sizing: border-box;

  &:focus {
    border: 1px solid $input-focus;
    outline: none;
  }
}

%no-list-style {
  margin: 0;
  padding: 0;
  list-style: none;
}

%element-tag {
  font-size: 12px;
  position: absolute;
  top: 0;
  width: 0;
  padding: 0;
  height: $action-btn-width - 2;
  line-height: $action-btn-width;
  text-align: center;
  overflow: hidden;
  z-index: 100;
  transition-property: width;
  transition-duration: 150ms;
  content: attr(data-hover-tag);
  background-color: $white;
}

%field-control {
  cursor: move;
  list-style: none;
  margin: -1px 0 0;
  border: 1px solid $gray-lighter;
  text-align: left;
  background: $white;
  user-select: none;
  overflow: hidden;

  &.control-moving {
    border-radius: $border-radius;
    animation: DRAG_GHOST 500ms forwards;
  }

  &::before {
    margin-right: space(1);
    font-size: 16px;
  }

  &:hover {
    background-color: darken($white, 5%);
  }

  button {
    box-sizing: border-box;
    font-size: 1em;
    line-height: 1.8em;
    display: block;
    height: 100%;
    width: 100%;
    background: transparent;
    border: 0 none;
    text-align: left;
    padding: space(1);
    border-radius: 0;

    &:focus {
      outline: 0 none;
      background-color: darken($white, 5%);
      box-shadow: 0 0 0 1px $input-focus inset;
      border-radius: 0 !important;
    }

    &:active {
      transform: none;
    }

    &:hover {
      filter: none;
    }
  }

  .control-icon {
    float: left;
    margin-right: space(1);
    text-align: center;
    width: $icon-size;
    height: $icon-size;
  }

  [dir='rtl'] & {
    button {
      text-align: right !important;
    }

    svg {
      float: right !important;
      margin: 0 0 0 space(1) !important;
    }
  }
}

%button-style {
  border-radius: $input-border-radius;
  border: 1px solid $gray;
  color: $gray-dark;
  background-color: $white;
  padding: space() space(1);

  &:active {
    transform: scale(0.97);
  }

  &:hover {
    filter: brightness(0.9);
  }
}

@mixin states {
  &.primary,
  &.success,
  &.warning,
  &.error {
    color: $white;
  }

  &.primary {
    background-color: $brand-primary;
    border-color: $brand-primary-dark;
  }

  &.success {
    background-color: $brand-success;
    border-color: $brand-success-dark;
  }

  &.warning {
    background-color: $brand-warning;
    border-color: $brand-warning-dark;
  }

  &.error {
    background-color: $brand-error;
    border-color: $brand-error-dark;
  }

  &[disabled] {
    background-color: $gray-lighter;
    color: $white;
  }

  &:focus {
    border: 1px solid $input-focus;
  }

  &:hover,
  &:focus {
    outline: 0 none;
  }
}

@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin hideConditionField {
  max-width: 0%;
  padding: 0;
  border: 0 none;
  overflow: hidden;
}
